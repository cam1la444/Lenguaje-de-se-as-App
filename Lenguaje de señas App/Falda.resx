<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>