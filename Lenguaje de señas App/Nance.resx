<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>