<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYa
        HSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wgARCADsAOwDASIAAhEBAxEB/8QA
        HAABAAEFAQEAAAAAAAAAAAAAAAcBAwQFBgII/8QAGgEBAAIDAQAAAAAAAAAAAAAAAAMEAQIFBv/aAAwD
        AQACEAMQAAABlQAAAAAAAAAAAAAAAAAAAAAtGr0ERWMZnzoPlyYmJBGQAAAAAADU2IqOo1Om30FLX1zM
        mKLH7vjNDJNOfFYmnsXI422BlQT6v6Ihn6AmgDIAAAAAAACNuPnP5+1r9hr/AHn0eZr9hia1J4xenjOx
        cz/NzC36EsyPpfMsW8Rlq8bTCiDdEisPMzqAAAAA5a5CWst6vS5tX0HI9byfnfyvZ2MC7DyNZq+h5Oe9
        d12fgSdLs9Pm+q/qfPoi6a3cZxgyLsY1s+anxFUqzcYM4AAUryhE+90Hd0/R4fN1pF2Fi+zvqm1b0NLh
        7/EkoaSm8v71dfu6Vr+gDS0BJlI+l6z5uCpe4KyxNgscQABFUqw3jOpycZz/AHgNwAAAAAAHvwO/jm/r
        5uP9D+9Zs7flwAENzJE+M85Xz6oe5DEwAAAAAAADAztdJRnbbYuVd8aAA4HvtWQjkazZU/WVEXUAAAAA
        AAUr5zHWxf203JmUWvMgAAQL57ThYOtkKVq+pBkAAAAAB49ed6duSYw+grHn7om5YAAGH8/fRsQayaL1
        Zu0/W1Gl8AAAAAUzrSlMOTk9fLep21vzAZwAAA1+wHzlsO4j2Hp5lfHqt6So1sgAACjDyS8vz0fMTzPx
        coS84AAAABDEz+MZgC7uech6+ZW3WHr+3m3rPdrrbm9fOpSms1aKbU64fqXJuZf6Qm5QAAAAAADj+wEK
        62fGssGdRJbOmPpOjZ1h3Tz01ngjoJXMYGebQgAAAAAAAAAAAAAAAAAAf//EACkQAAEEAQEHBAMBAAAA
        AAAAAAQBAgMFAAYREhMUIDBAECEyMyIxYCP/2gAIAQEAAQUC/irGyHr2JqcBcGuACV8qWRsUViW88xIF
        XJY+GujiJpg/BMsRQ8I1THtfc282KRcuxCbqPI9QnjrW3Ap/pq0jg1I6fk3JF35acTkq7wLIQkpp2nzR
        sCMbm/tTjMRfQoBFzTtw4ldbyfmP8JV3YtNC81a+Hqao3mhEbU9nNWB0eQko92WUSsW/NQ+SD4Frmix9
        wTw5pI4ozHjw2Yr9qYRAydsZDxpHIj2ys4cg/wACF2y00PL1ZtqGHk+qm47Ulg7G6lPbg2qYHKKVCUzu
        XNzDXNJJKs5eUbuBSuY6N6PTJomzRwyvCluI90of4v8AtLtzTkYMxMRET1c1rsayUaSo1E2Ze1e2aVws
        bHkSCBrKks8Y2FxumcOXsVpKqnMZO6IiIh7uGN8X+0ifrpZUDzV5oqo/Tds6KTsKuxLElbSzAG4qnk7v
        rJEyTOUzlXZwI8maxuI5UxV2qIsiu6dOlcQbUAXFhJj326dsOfA69Tk8tUgRbWzOQUZffqkiZJiiMzlG
        Y0eNvWLO8acMqI2EkR8eadn5S669bSbXM/DJpnzL4LXK1a8sV+WTeUNY7eb1avXbb+Kb9NY7erurVqbL
        nxTfoqE2VfVrRmwlPFO+sVnDG6tZQ79bEu2PxI4+Ys+u0g5qvDX/AD8JfTS0XHuexZwcldJ4cztyLSI3
        BrOxrIXeHjdvs8J0bii4Y2xRdgyBpQsCOhm8Bc/SaQG4xna1cGsBbXbzfAJVVyqEQEHtWArDBGNeMR31
        VGppQJSCu5qus40cEnEZ3oYH2JgsDBh+7qCqcBPG9JG9Ke/W9z5JKOsbWjd57WvbcUkoT4pmydD3oxI2
        kEyRkNd0LsRI+MZLSU8dczwbKgFMWeisx85SyTIqq1nwLS7UWCGMeOyphD8I04dArgrRmMr7WVRNMSyO
        DEgDi/o//8QALxEAAQMCBAQEBQUAAAAAAAAAAQACAwQRBRIhMRMgMDIQFCJBI0BCUbEkYYGR0f/aAAgB
        AwEBPwH5YAnpvqXNOWy81IFHVg6O8G6Dp1EXEbpumuIWUP7VSyXGUo9vg1jndoTmOb3DnggfO/IxQ0MM
        fotncsTwySlkvbRXsoCHOzDdO2CpsLhiFz6igLbJzQ4WKfSw1eY02jh7IgtNjy0kXAhAb3PUMQibYJ7G
        yDK4XRwqlJvlVRhj9omD+ymYPUO30VJT+XZkLr+NbC+jn8xHssWia61RH/PIBc2Qa3Q9Ei6q6IRwyFp3
        5GmxVO7NGOlWu/SOP7cuGy5mW6MzsrCVismSmDPvy4bNl0+yBuLjoVTsxEYWLT8SbKNm8sMnDeHKjmv6
        edzgwXKM2XNO72TiXG55qKf6CoJ+ILHflJDRcqaYymw2VfPm+E3YfnnBsbhU9UH6HdR1hGjl5yIC5UOJ
        xSHJ7/lPqXN+lOdJLqVU1YaMkW/3/wA6QmkbsU57ndx8I6qaPRjipKiWXvdf5X//xAAkEQACAgECBgMB
        AAAAAAAAAAABAgARAyAwEBITITEyQEFRQv/aAAgBAgEBPwH4xNbb5GX6nWeLnvzwbudtlsQ2pqcvN4mB
        rFQe3C5etmCizGyk+IQMgsTpsIg73F8mNlJ4hyvtqytZ4A1Oq0XL+mdZY7cx4oQ68pmE/wAnfR7I0nzt
        J7acgo7ImIW16co2V/ZhFDSRYjDYAvtryL9witQFTGtd9hkqFZymHERAs7CKn2drlEquBUGBQPHxf//E
        AD0QAAEDAQQECwUHBQEAAAAAAAEAAgMRBBIhMSJAQVEQEyAjMDJSYXGBsSRCYpHRFDM0Q2DB4VNygpKh
        Y//aAAgBAQAGPwL9FNNodi7JozX5w/xVI7Q29udhrbpHmjWipT5n+9kNwWaxKlZLUsjNGE+mpe0TNaez
        t+Su2SzvkO92C5uNkQ/t+qxtNPMLC0XvkV7ZZ2vbvpRUjddl7Ds+AsGcrrqru4MPJRQ+9SrvHUbsFsNn
        b8Lf3RlbdtDRiaZ/JXbjWncFVovDxVH1Yfiw4eMs+hIMcF9ltn4huR7X8qyx9xdwFR1GhHpnVDbbI2kj
        cXgbe9Xv9gscQVWzOp8DuquLeOLl7J4G2qHRkYcwrNKM+KF4bjUoJoUs5zkddHgNUL5XNawZlykNjdes
        7juyV35cFH57DuQiteXuyIg5FOYdhomoqzR/BU+apNM292RiVSzWZzu9xotCzxDyK5yzRnyKpaYXxd4x
        V+zyNe3u6W795OcmfVX5n1H/AAKgxdvXFvwe3KqqOAseKhcROaxHqPV7Y8VQRrvVyLmLPlRv1WlpFYYc
        OkAVxtkkcx4Qht3Ny5X9h+nR1FDM/Bg/dGacl1TXHagToxq5Z2i92lxgPOeqpJou3rYV1UWSAjv3IQyY
        lh0T3IeKPisOVHcwkLa306OUXZGoWG2OwyjcfToanJPk/LGDf7VVw5tq4qPPaeHSC0XkLGUr71C4+8sC
        qlDE3ByuJd14/RcewabM+8Ko6zUL556PRf8AXoJKHSk0AmgdZ5VG55Dl6QWblm5dX58tsseYV5n+Tdyf
        I1vMXy0OXF/lzaP06Cyw+Lk27gQhfOWpVaSPBGzHRilHVPunaE0tNTE/NBwyOPLgb8A9Tq3mrKd8bfTl
        wHewep1bzVkH/k305dkl7iNWaN5UTOywDlsk/pv9U092q2WHe4V6CeHa5uHiiN2qvm92Jv8AHQzR+4/S
        b56o4rjT1pje8uhitTOtGbp8EHanDZmZvKZGzBrRQdDLC/J7aKSCTBzTqVSpbY8YM0W+PRstsY0X4O8U
        CNuothZi9+xRQDMDSO89HJBJk4Z7k+zTCjmmmoFxyCdbphoswZ49L9sgHOx9em0Lv29OyywZe87cmQxC
        jGCg6b7VZR7O7Mdn+FUcrDliCzgukdhgqYGZ3Xd+3TlrwC04EFG0WEF8G1u1q3HdyNI0TnWOF7roq6gV
        H6LuRVxoFxNjYXOO1XnadoObt3hqRezmZd7cj5Lmrsze4/VfgpP9V9zxY3uwV63TGQ9luXzQjhY1jBsC
        LpGXZe2zNeyytlbuyKobI8+DaqjbM5vjgg63z4dlmP8A1cXZ4wwev6k//8QAKhAAAQMCBAYCAwEBAAAA
        AAAAAQARMSFBUWFxgRAwQJGhsSDB0eHwYPH/2gAIAQEAAT8h/wAUbI5SuWbI1Xc/dDIsofPz1bypjYAJ
        ylybtgVkogAAvgj0DOhV2U79EC3eftVT5YgnoHKJucIqZdAPQVc0xPsCGhcAO9xRNZ+l7MeBiVhNsn0n
        SJBujmNTlgQ2ph1Z1P426ExIgYh0nudMouhO6R2RoaLkLIE19gU0EIgDVvHAhwxqMEfwcBMCcsCnzNSP
        Smx/jo5BgFeB9FAxHEp3XZgmW94OPLdILRj/AMGaZ9iCGAC2NQV7v4tME/2Gb+hvwPSQRPgKOcKIGaBB
        vr3qbdIP4ufHSSq0DBV46UIB0gPgqqMV0cG3UQyhonPROqqljY6I0sNwDSdFSZiA1Kj7Tmzf+eITs/x2
        YOoJczfagTyB9oeMsVv5WZzjjUW5rShk4DGeBPdBgRphB08WMyqiPo9F3CDDg5CfGaAeyAqFgboXvogS
        wknk2hGJGcjsq67OhCWEBlxGtqiGcEB/n3QrxGgfPF45d75PHFkEd2PCVTWUFMJ0QonYmTflGJhmSlWC
        OmbVPQN4hA7+aeCESdivaVki2kn7IQIGBFPkTQbxdJIuME61DP8A1lVtKtGY4YckRyAAHJNkehMRgEd/
        tBoyg2OSZkrQFbIccQMRKLC+2J2Z3U7tIl1up5KbgiGI5KF4uTx8gHNg5qCPcf5otd4EIxT25YbvzyC0
        ccb0+HRwBAPhDVOKIkSS5PyuCcRKKgSF8ygnHcgGDCPkQBjxYjAp0oLhizkKFlCA5WCyYXsGjOfKm/IO
        CzvAH2jLxULEI8PWMG6J/NxJkEHDjYLcwuEWmhgLsXCBHUB88Dh03C78AT21PpORIwR0smhOZ8wa1Fzo
        QfvpQhFmEWn8GPm1gqEnSj2yz76MYQhMPGyPXwORTZydio8hOkyaEdGCdsOUQczR98logxdir246MZWP
        LMNVTluxKD7O/JOBSnNHn2ggrhDoChKiHoOT/pAQZxZDkzlbTgUAN3DZiUOhOCQBF92SnsPfLwxS2H8j
        0hRIHQPOJ4NdJAAC+SZorsRk8uw4hiWPdPONZnwHOxyRVUEyb49hzTOliixvqPSG8YwQ5ZR4XqL2AuVQ
        1Ac0hwxRkSSU7zZAzfGHAH4EAcn+D8TPXp9E7cuL0yHPC9VgcEKdQJ/yhBmfNcXTsAlRAw84zRiLoQU3
        E2QxChDnQFhjkFS8O1vJk99EPAnq3UzQgaPE3ZCcxc1oowzwP3Q7pB7pelHTQLKoBZW7FERtcj4jTyiH
        84WWsCiPdNhNU7oQRdVp1G/+k//aAAwDAQACAAMAAAAQ8888888888888888888884w/888888888ojA
        4mf888888888h9yKt83z088888jyQ+zgaiQI2888o1DAjS0pDD6G888+jDDDDDDDDCW888rKDDDDDDDD
        CIc884tDDDDDDDDWt8888OLDDDDDDDcL8888LCDDDDDDBeX8888stnDDDDHgm888888OIIGIQjVc8888
        888sOdMde88888888888888888888//EACkRAQABAQYFBAMBAAAAAAAAAAERACExQVFhcSAwgZHRELHB
        8ECh4fH/2gAIAQMBAT8Q/GuQpEYeU5EXWm8B2/tIwxrh6RlpZZeValxd4q5e1RJv5ePF9M94e1OD6XuO
        wtWChuRxgDlf1q0O2wWuB4/bSASWWO3yfFDcliVdoxGevmrVRQ9Ru6F3eaAQIKgiJrT2ZjudTL7dTg4T
        hQ5jbGH3fKhl9i509EHBr5YvmmDvZJ2WPelIiNWfaaecPN9jI9QZW2XRbx0cP5Q9oGyGeE64PTgiM1OB
        LizbkgIaSIgGG20ZmdrHPF4Il1qUZWduSsE1anH3R54Y5Yk9bnk7SVnPDsE+8cKvMp6Y/daMrh5GYRtr
        KYjrj46cKdw2oRN1ONzdFadrN2wKUNK2vFZSWl33Sj/0HC4SCie21oUPN65+BcdeNySEqEWD+9qDhnXG
        mYIpemBdNhscNnotWVY3+/NZYnQPilySrHAafJ7Z8oyFir9H0BgjKbO1WAw1fxf/xAAhEQEAAgICAgMB
        AQAAAAAAAAABABEhMSBBEDBAUdFhsf/aAAgBAgEBPxD4w7QRLPUpUJbCGqNeNWBRR6iqZZRQXv8AX5FR
        9Q2/CDbAOn0AFuhO9EtWRm8p7/ZhJujBFuCmSUe49wRLOOP6PCKyf1hbaI5JkKrz3iil8BaI79SCeDkh
        r1Die7DbLn6cbcxK9Aq4yr3xxUrzzC2iWgwKKOXQ5YLlS2UL7eaXhjZGoLqXYIVcB7gaI7/j6lNkBoeM
        sk0b4v8A/8QAKhABAAEDAwIGAgIDAAAAAAAAAREAITFBUWFxgTBAkaGxwRAg0fBg4fH/2gAIAQEAAT8Q
        /wAKIHgQXMiRY3agg5TfhU45YAp2IgvRoZJPKyb1Jv8AoUh39Eq+hSzK9VjbfQ9WXWnghdbNqTZiS6xS
        B37lBSK5LhtZt5JtDCQSvU9lBxCwV5Jj2pRgEhEOrfio1btSqkyLN3UT+mSj9JPbUyoJY332HozuH4xA
        Ssxn2wd6i9hbq/1q0rW1Go2kupgDr90kjIh/wr6B5GBHEieYAdIqYFssmqnuFqCnbK3dN+jei6hmADtC
        R71Mo0QLoydmsgmG5QKAllEj1KkTMsSLyjtJbpSiPEeQyDZE8L5GWOstyoUb6L7FRww+6f60d+POSQyL
        1fu8phjYohukacu5LkvBVkgm+58npT4lXAB0aaREuo/NPpakuRh9WIfixtJxsndGDp0otxNVj9yucJVq
        3PzWNd38H3Rh4RWYLx1TygibWUzlbdqs2YaiMgiw7WoHIok3/r5/B9Jdt33H6rAFpFnb+eTXejmGSyKI
        +6l5nnMMTXyflrhUT2KGAC4NL5lThLrJsyeqKfedAL2a96kHQktHc0wI3M/6y+KY27JD5SAdhoLq1JeO
        RcIeLEhZXBcNo2MvS9MXw5x7ffddWrDbufANKgYgAQoZQ7fFC0h7i/BQ/UrQOiU4rMMGcPG5p0oAEuQw
        i74HvTntvdoQlnQN0mnzwBCGRG0aQKTvm62y6fzQkM0AfmNp4X9avT8CNTacDiynt5AGyA1PVxihEkue
        E3SWvRuDkOqhSLbSx2Vdv+FDDBaweI25+aOCLouddXsVJFolvDF9zSlC8NGDoafFCA0y59K0f2f8UYEu
        KFoD+3KLPJG4WOlhO5XfAoQhMtu9RORGGIj9mJGymEW5DJiDFSmm3h06rPRpwChNp6MytWjbCR4D71IQ
        AurU0nz3M9CpXnhRCYgGwzRwa0xMRgYx2nfbH5Ntum0O9G3V/wBhrBA2hfLTNDRAAI8i1bAmQB8qFgeZ
        gYpoSpVy0tCEbDY5/Ycuhco2eyp6UzBjhfW75dJpruaSKZj7KmGURy49pnk8ARzQhhifx+qrVJR0mDtl
        qPyw3VyvdpSylVyu/wCy0lhxeqllM2s/VGbRtIfVMCJap/0oAABgCA/YRctLKzwJRW9CRdLhtm+Gn+qM
        C+JhkLQLmkala0TudYPgDB2Ye6tI2nuUEoVcUAATlg18kmTSFKTaTSiymIwVArUg2ipmKC2qto09qbyU
        jhJPn91cnDdUoZJ8reGVfNO6ka7v7k549kXlYwU4Lf7KfID4X7xIvbl95pXds+UxVbN7E6H+6s1hG0J9
        fu0rOkYJdPDBPWIfJqFWKlKTDuRfcUfvCUDmJsfCU9tvIcg3+ZpyPJKwVgFXaAosfWT7eA12VNsUOnoK
        V438k59lCAwO4WKdJbyc+DItrCLM8rtbXcBk2dT1pST5BQLRkUr9zuTL0k0BcLtAA9jwYApEupPUGHtS
        b3N6NA9ppwxv5BSxoVN6CVeCklQKOI7j0fDwQUGFhWXo+q3pq5iOOKmOfGiOfxqprTJg7mKlRQJyPWsc
        B4YtBbCU7nyAaSdLDAduEhH+aGGSlJ4iwS0sstIxASq7d4FoLjhvV48U+5BFfGP9ewoQgW+Tfo0obUIl
        vCQZpK3oJYKbTZkhy8GDdQqMLusd13VlXdfFBAESEalQnLZ11ycOjbaWJthMrZoYxQubfpCAJi2jt+VD
        LTtpZzQSwUCo4GWXR9uhNFIFCsun9BZenjOQaESIRHJT+MpRJlEye+TXeiAGumejr+BTDU+KhmuW70Na
        mcQjibC07GXSoULMCT1cdGlRIyOL0jtUO1KwbUisB1VG4nHM1KC03Ycz43OeBbyTnlkfkWheSHrQtqQN
        nMCdlqazuFPUYoaBcw71X0FZPzVW4S46HVWGQTjq7vLekkCaDPCI7yeShEB0G5k9FE60tMD1aUOkmlDu
        6ADmVl4QjsGreFrEtu11183BUH+Ef//Z
</value>
  </data>
</root>