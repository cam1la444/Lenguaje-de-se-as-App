<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>