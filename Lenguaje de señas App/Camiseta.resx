<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAXgBeAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYa
        HSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wgARCADnAOsDASIAAhEBAxEB/8QA
        GwABAAIDAQEAAAAAAAAAAAAAAAMEAQUGAgf/xAAaAQEAAgMBAAAAAAAAAAAAAAAAAwQBAgUG/9oADAMB
        AAIQAxAAAAH6oABDX1NOS5BlxrENHaUYN9luuds9mtuR04QBGY5qzV4dmvsZHOmzbp+bcfQNBv8Au1Ql
        wAAgzy1fa3NjPlb4aZAoWZoJMLNHNqPYNem1twwq++J5c1tw0yBiaKhcj61z3Q+nohsVotVSkrrrztwI
        dgAAAAAAAAFayyhs+MWY9+53ofS0+YtSQedt+xSlAAAAAAAAAAAAzo9v0PfqZ1W1dOHnZLmu83clFGUr
        2MgwAAAAAAIm2JTxjPrPvd96oHWgAUrrDm298cyfSzefXJnCpIAAAAABF697Hr19PsbNvoRBeiAAAA57
        3FL5O+FbcAAAAADNylc7FfZDu1QAAAAOanrWfIdAIdgAAAAAFmtY6kG2HoagAAADGaxobMcnjOiGuQAA
        AAAEsXvoQ7selpgAAAKN7W6qbOPGdIAAAAAABnHm5H0A9TRAAAAazZ6mHauPIdAAAAAAABHJBY06Ueto
        AAAANNudHU38jyt8AAAAAABWs+NsdCq2vZ84AAABoN/zvPlkHmroAAAAAADOBd2Oq2vsecEmAAAMcN1F
        HkWK0uZeJZDTIAAAAAFSLYV5NXTc30npKYXYwAAMagjzDCU5K3k1z6nMphnEdU1z4yVZPWCHPmUuaXJS
        zHsbRcjDID//xAAqEAACAgECBQMEAwEAAAAAAAABAwIEADBAERITIDQFFCEQIiMyJDEzRP/aAAgBAQAB
        BQLta2Com4ThZYlhgZZXSuS6M+me9swtcFc0ayFmIDI4H2I4u3CR0rT+kIw+76s/CycROKrfJ3MnFcWM
        NmTzzkfA+kgJBLTXloPbFK4CRl28skZBkGiMCvA+wM903PdOwtsSzp/dJvMVLCx2ECQptMZdzmwSs2eu
        0fI7mKgzOm2OczxnUnnUnnF5zomeAADub1CKHqMHT7HuimLk+6IhNUtqxfUkVwMU2Cr62bATkYnm3JHE
        KbKrgIIr/fDecbuWESXOEhOO6Ws2sAAGWax4rmJjbyIiEJNjts1+cwnzfWDRNuu2XIpU+pDJyEIoRJp7
        rFeLs4yhM8058kV2Ndo4qmshZYOCKvCWg9UXLrpimEvL2FL5prrrWzT/AOjYen+HqQ/fYen+PqK/rYen
        /pqVv8dhQ/bTPwK3jbCl5GnZPCuscF7Cr5mne+KexR5un6j4mxh5en6h/lsT8O07+yb8DTu+RsbXjjTs
        /NzYsHNCrLmraTPm5svT/E0h8t2VD+tEngEOZIdNuL6mvyvOM51x9NbM2dH1E/xJREoqiYQ2AX+U+Rok
        Ag0zHOnYGSlOGG0sZ7xOC1A5FhlnB2cr8lKccNtcc99XwXq5z3iM97Xz39fI2YzwRecFZ0sQiCe7/8QA
        IhEAAQMDBQEBAQAAAAAAAAAAAQACAxEgMBASEzEyIQRB/9oACAEDAQE/AdGRl6ELQtoCljp9FkTKCpWx
        qdAD0nNLTQ2NbuKAoKDWiLGnsLiagxo6CprIzcF1oyMvQYB1kfGHJzS00KicCPmaZ4PwIGnSjk3Yq6Sy
        1+CzmO2ii84JjQghPlLro/Iwfo6F7ehgn83jBN5uGGXzc3sYX+TdH6GE9XQ+sTvhtgb/AFAYKKUUdaCR
        0uZy53LncuZy53ISlchRmcjK42f/xAAuEQABAgMGBAYCAwAAAAAAAAACAQMABBEFEiAhMDEQFUFhExQi
        MlFxIzNCgfD/2gAIAQIBAT8B4TU4EvlusHaT5bZR47h5KUSM6jg3D92Cfmr5I22u0eadRaiSw1ajo+/O
        GXheG+OCYfRkaw4ZOEpFvxvIvuhubeDIT/39xzCY7Q5MuuZGUKXROMlMKwfaBJCSqcJucGXTvDj5uLU1
        rpotNolps5cqptDL4PDeCJ1hxtxVLrrWbKm36z6wYCaXSickil1qnt4KipvoXVpejeJGQ8P8jm/FURUo
        scsDxb38fiJ795aFmALoGBdolZEGM91xTa1eL70LIX1EmN9aul96Fkr+VfrGS1VV0LMWj+IloiroyC0m
        BxTC0aJe2jKrR4fvFOrRgtEFuki4rTKjGkyV5tCw2o6iXQpCl00EP5iQcvsplhcbFxKGlYWzGF6Ryln5
        WOVMd45Yx8RypjvDlntj1WPJBDVmNFvWAs9gekIlMk4//8QAPBAAAQEDBgoIBAcBAAAAAAAAAQIAAxES
        ITFAQVETICIwMjNhcaGxBCNCYnKR0eEQUoHBFDSCkpOi8XP/2gAIAQEABj8CxZTxQSNrdU5Udq8ltYhH
        hS3WPHi/1Q5NloClpMkxnb8OaKXe67MKWqhIi0p7GWZzlFi8kwlKiDGeDZL94N87T4N4P2lglcXazYq3
        65sBIlPVaIaWsy3nzH7YmF7B09m1uIIsaT0ma55YfTGKlqCUi0sJiHInANKtrYFNJ0jcGm+MFCIuYJWY
        uTMCex7ZkrX/AKxePNYqnZsxuqEp18lo3MZJjeG6lanewUeTT4JfmltQn+T2bUp/k9m0naNwi0pZU8Xe
        ppLjKNqrEteTOSbcUgzgtgHh8Crx645W8MEhsIQpUNFCRGT9b2jRj5QnvtbIex2LEWndoVuU2oX5htQv
        zDTIQneqLdcsr7omDQAgMeBdgiySqBDYB4oYYf2xYqpNAFJaV0oSrkRmSwkEqd3Hs1YSj1fy372klIgw
        R0gxTY89fiEgSnpoS0t4ZTw23bBWoGhoGKnHFHs0RQ2FVOt5OfSun8HHARyWL1yIgzqR9w0UmIrdqej8
        V+zAAQA+BeuJnlosU1xExBsrBKjABgt6IOuyg9rafTFwjqAe8FbCxBBSsUpNnxWgdi2oLUBEgRYKovF3
        wlKMAwePxBPZdnmccHReChQbBvhBVhFCmwTrTNJ+UXstCNFKEjnUFjulkdIdiMUiWkW7WTIyyvRAtYPH
        8FPLBYnMlC/8aAnJnKjSWf7wOFRceAMpaEwUrOdI8f2FRd7Js6+/6GowuUrnnVm9audRei54c6k3z1F+
        O/HgM5FnXhFRf7knnnHpuSWQNgqK9qBzzj7wGpJ2oPMZxW0gcak4/UOGcQL1p51Jwe/9jnHA7/2NSQbl
        pPHOOBsUak82COcGx3zPtUlC8QZ0q9IObe7AlNTQLop8jm36r18pqm+TcvnPmiTQGAUcDKMcpNMeDa/+
        gbrCk7hDPzvEJ8KWlK6QBvQzwPESZSQQb4ZpVxgFbozsUqAIuaSVSoUVEvFTns7GcBOnKj9Lc1Azhuoe
        SR8qhENq0K8Kmy3Kx9R6tPKDUnyaYKLZLpZ8vVvy6v3BtQf3hstyseXq2VKH0bT4NrOBbWcC2s4FtPgW
        6sKU0zmHiUGy3iUDuCPEsZIyjSozk43/xAApEAEAAAQDCAMBAQEAAAAAAAABABEhMUFRYTBAgZGhscHw
        IHHREOHx/9oACAEBAAE/IfjqZlXi1xnScr9Iu3FLzXxHXekcpIlBhLWUxrpJ4wD0RNM8XB22C4ynECHA
        +LWV8IL1aMgWFb4T4x1Ch3kebbyEHTTCz9LHZy5voOq6EXfXgaDA+D0HLseL/kChW8yqsEYaSW7WPvzd
        Iv8AG7WBJENSlkkkwRgZEIbsmZe82xxgAAkFAP6pIt0TGHDqmU1YC92GxQhkWC6wDWJQuSscB9d/ke4j
        06csolAYFKn2RZO+7nUOEosYuJ5j/FgyD+4MPOs+bLtAEnFnnL6LHCFaVZT2XQhCCqxZ5vxMsBJHGBTl
        lW5To6lc/mAG8YDQPpqbOalocmRmLNz5qDT2NBxKxkF6ySY8BPuRn8B/MZfFPzHWm3QHmMI3phfiwSEF
        gJB8w6a81TVkmX4xKrWp05M9OXxPzWhXLkEAQpGZL/Z1ghRsl5uoctN2lycSpx+GkafOBKX1lD80WT9t
        euP9ygrvVyNYU5fSZKDIwN6BAFURxiQdU/r2QAQVUTGHULry/BbfZCA51ISvWWk5wop8ni9zTH7uMnje
        lAVZBjFecw2+jLVjBNgSAsfxEoxOn25OsIJCizLyd4EoKatiHFrov+H/AK+LzMZKtj0rhBKgDees/wCi
        e0E8Cs6cJbg5ImBxkQAgqyXWI/xYIcWJZHr6GemH3b5VhdbjTU0iXjf8lrp3iVtIJ+snkRKRIX1867hr
        MHSErT+8ErNTqcInseq9NYnAFa6euvbYixRqJdYJrCpV2KObFS+o/u4JMTOHNe8ox/grQxZGE9pdNBuE
        XIdHI8im1qTP8fG48s+va15h9e4+gayfO1q1jmV3FcG5vy2imKxWDL0qbjQGfZPG01sXSNLC6bi5BnuS
        /do+DOkSlTcaNN8toWP+kSG+40Jn5XjaL6i7vG5PSycw87R1zp+W5T9HjtKsh2B53K6LryVhTJltm5PO
        3IarnREzr9O2bnfcXzuWMe9Kh42b1xOQ8NzcsxvIeTsicSCawBpoKi1Oj9rRkrjAAoHgstv0ITeq+IoQ
        LUquVKwz2cAkTpKDUuX2SAzkysmDohIJoopAhEypvLCe4jOMPR01c4qyTcPR/myZCISRxi++jr6xOcN/
        7GyR3w2Fl/cH7/Jdmo/Y7sUU+3F/WJN2+oO6m4d6P4hK6OOLF7vqNN7aQgTfV9QLZsTcvpwO7HV8btOO
        GsmvTSJuZuHiH5f/2gAMAwEAAgADAAAAEPPMPXF9PPJR/ffPPI9v/wCyn2rT/wDe/wDIvv8A/wD/AP8A
        /wD/AP8A+6/pf/8A/wD/AP8A/wD/AP8A/wD+i/l/9v8A/wD/AP8A/wD18H88903/AP8A/wD/AP8A9KTz
        zzzzX/8A/wD/AP8A/Y8888881/8A/wD/AP8A/wDvzzzzzxf/AP8A/wD/AP8A/wDzzzzy3b//AP8A/wD/
        APu88888s/8A/wD/AP8A/wD+3zzzzz//AP8A/wD/AP8A/wCtzzzzzn//AP8A/wD/AP8A7lfPPPABP/8A
        /wD/AP8A9/7zzzyIMKB14D9z17zz/8QAIBEBAAIABwEBAQAAAAAAAAAAAQARECAhMDFBYXFRof/aAAgB
        AwEBPxDDXOCc9rGuhFfRk0T54lxST8JlAPR1CLgxscTXofeazI7OJe0RVODHkJoVtpfMBrvBQPOm94pE
        dwJp5wEdTYpdRa1Z4/EUbJ9j9nDsNJaTwZv4tgamfT8tg6H3OKDYOaLQhsG3mNl7smw8zG9mFozG9qLT
        KjYZRrsP5lprldtVA+5858Z7w8Yv8wTcVO2i3q4//8QAKBEBAAEBBAsBAQEAAAAAAAAAAREAITFRYRAg
        MEFxgZGhscHR4fDx/9oACAECAQE/ENBsrXd9wp20DI+zRLUrda9OfmKLNAst3/uPXUsUy0o/MO7QmBza
        ZCB6Pb5QdbPGTqO2S7j+uM6UuVp4lie8e3Og7QZ/zs1ZRPZ9o+54H5Y82giGDzplharyY5k7ygF06IZe
        7j25eaX2xubuRu5bN3N6rwCvMfjUyrO5xq3TFI+uP8bYVsoWHt9UrGRq8GrnDJ/rdDsCP202G6rJjnQK
        gvoIDlMP3xxu0OgkajBcXFhwpzHieDYCPI/VIr4uBl71pHm2EGWPP7rzHN52EBYrya+cjsIExH761spD
        YzDj4dbiU8bGW5POtP8AKOrGxyRR1psxQ9+tlmUD21ZklMvrfY76ZmwnAPWwtrkcD5TOsRJ01YdBnTdi
        OD9mv9w+VFv6j5QJe6tKEiOZ8q4uofKFb3t8oaV1Hyk5tuava6gEEGn/xAApEAEAAQMCBQQDAQEBAAAA
        AAABEQAhMUFRQGFxgaEgMJHBELHw8dHh/9oACAEBAAE/EPTeI0ECWwZXkXp9NJy/mIfmKLtGzF8KiLcM
        ieKfJR2ZS6PKTmgjLnNiWR5tsbzZ9iT/AIvIJtu6RRUNWQhCoEAlHapxS1hBQuRqUCg7QL8z5qBgAwiu
        974KWukKCbErcpnl7dz8RWLMvSYl5gXSksSQlh2HKO6t/QykYBmy3QDsQ0LAQRoN9GTf9jTD8UHJfTbt
        HQEAiI49IMIkAO7QTHpA8lccpdYUICjAJQZbN9LvcaUIQwBABgPyHjYKBsjRbNS4LKXU2FdQKiJ7FnYw
        cssLVMAVLujQpDlbSb6pdfSgiJI0qy5EodU2ebEaqH0fhG+Pc6JXfJJ8e0DoAv4Y1HlP61FLF2/rCoZJ
        fZfRR5U+AJuPuQdkUf5XJNzT+qUroEsFX4IAsAB6WJkOkCQjRAWlMpZbUfByPUA8Ll5dAMq4Au0al1Ln
        yG2bLMKDDVZacDHHITf1ltcteniHzRk54F53yTUWOdP4ffQf966aW/tXXTbj7pOyKOZ3IT8lJHJDlQvr
        gYGwGPWevzutTCCGcO9Qm0kBGZTAJkKayJD0Jk5F+RT4C6hevq9k0pz30AMhe5HVoq6NVLqOjwr33KQX
        dWoOhczYo3EYgZTCiFGiQlKRItl3GkaDHVDn8DQdWIk1fR17AWCguYIv4By5VeKLWqBIHImpSiR2vJv2
        e2eYwbtRCQOEdSkGIBeVeBtdBuLleM6ZoGICmQlCXQaREWimkoy2pz+uORFB/JQJaEsiNxGyNxzxRMgS
        pgDdaj5Ruh21L3DEF0UVD4AsAGD8SM+6oZp4J6MmFVrgQuQ0fCIkjPEJQwvAGVdqHHkiDqAe4XJusBBb
        0RsOTMDsd4yW5IqsEs76TuOgsmPy12yfcA3cnNjR4Brw9QJGF0xSgRsbtzQ2/GTyvgDdcAXdKVysMupc
        DwxyZ9YOBhDl/UNl1VujDVwi7pEuzbkLruaQvTxqDyLaW6uajfA1YngN1uiuqZLqvAf7RDKjVUaYWD1L
        JoRkpJBEFiqJkcALqsGdqa+5yexc6F32Bb2UkWkoLdWgYRq2mkqnUAMQAQAAAV0l8JOAE5gJXTA+CUXe
        YQTI7FJdiJbvtuKXnPxD4DyCpmfy58e44p/2sTgRBF/7ueE91hn/AE+A3FONF4T3E0/5n9pwImqO2+2v
        cPHBXamC5Ve4fvgeV/lD6Huf46ba0l8YDgf8Lb/X3J3qi6qPuiDktwKGv26T9vuST/wl81cuvAqO1p39
        y2nn44cFQpulSMe2DrV7U/uOCJTCDsBvh9x7F8Gfd4IOiA62P1QGkokfbfR2fDwWxs27qj7pmEpHml9v
        ZTuUP+vBGHWmzNftAnFOzo/T9k+DnVwxy/be0HmQRgC61IX955miCcJL+qgyHZx4h81B5pfBrIqfD7zM
        MZ51kc/EaQRmWE00AQS7F6YBOQ1NAC3dbX2pkD5Ymh0ki6CulG2O7kbRQIpDdti1QtOscDafCJLRknMS
        uUQYKUpsgGQIb0IdXVFHsqdMFIGyJqVixYgbZSFykGhRNp3jXsv3Qc88heKCSaMMqHayr/e0GIDhCn5F
        IgwsWC/cUXcRwn/TpJPUK+UouYbP/NRSC2wPXJqWt2Z+sp9CUu/jcHYYM0vAb9xRxM4+qKgZS4CfvrUp
        XdDysFRoIZmFiS8bBAaB6v/Z
</value>
  </data>
</root>