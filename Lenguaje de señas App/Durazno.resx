<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SZGd4xZNChZRTCsXscGToV//2Q==
</value>
  </data>
</root>