<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        sUcYtVJ2SlIWJSV5Sr7NCJhB3YH+T//Z
</value>
  </data>
</root>