<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        nd/8r//Z
</value>
  </data>
</root>