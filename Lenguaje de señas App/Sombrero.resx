<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        wt9rgltlbzxSOgjoQPcZoIIEB4P/AIZ//9k=
</value>
  </data>
</root>