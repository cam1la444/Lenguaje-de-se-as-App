<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="axWindowsMediaPlayer1.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAtwAAAAIB
        AAAAAQAAAAAAAAAAAAAAAKIAAAABAwAACAAAAAAABQAAAAAAAADwPwMAAAAAAAUAAAAAAAAAAAAIAAIA
        AAAAAAMAAQAAAAsA//8DAAAAAAALAP//CAACAAAAAAADADIAAAALAAAACAAKAAAAZgB1AGwAbAAAAAsA
        AAALAAAACwD//wsA//8LAAAACAACAAAAAAAIAAIAAAAAAAgAAgAAAAAACAACAAAAAAALAAAAwAcAAGEC
        AAAL
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5bugVf88YAAAAABJRU5ErkJggg==
</value>
  </data>
</root>