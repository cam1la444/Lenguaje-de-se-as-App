<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>