<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        M3a+Gb9FLELGz+qjgNha+Cg5FgEH/kf/2Q==
</value>
  </data>
</root>