<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>