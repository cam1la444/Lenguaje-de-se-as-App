<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="axWMPD.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAtwAAAAIB
        AAAAAQAAAAAAAAAAAAAAAKIAAAABAwAACAAAAAAABQAAAAAAAADwPwMAAAAAAAUAAAAAAAAAAAAIAAIA
        AAAAAAMAAQAAAAsA//8DAAAAAAALAP//CAACAAAAAAADADIAAAALAAAACAAKAAAAZgB1AGwAbAAAAAsA
        AAALAAAACwD//wsA//8LAAAACAACAAAAAAAIAAIAAAAAAAgAAgAAAAAACAACAAAAAAALAAAAwAcAAGEC
        AAAL
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>