<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5J3VzqvMxtrDMubi4ScTzBDcwHokpxGVcTpE4GaTYj7VuKytL7seh0ppavCHKPQ4F+93YSIdBR8sDKdH
        UiMXaz68GE0OzBrFPmaSzueZ+BSJdpR+yDcX8zTr0l+Iy0XiLioOZXWr2b9yvV7rfz2rwc+iAn0pHDBM
        14vIwrzSEl/L7ROTPtKvEtbxKvWXywwvpOzUhMcjyY9esLkHQFV9DWWEwTf5Rms45l6/EMMalvWF9MQ7
        ylv9TR6zT3v+6eBkc/SJWDYLGXvUgo9tR+zGgKn2VpTpeREf3p/E5k8fvi9q66/pqBQDQFf+xf/aAAwD
        AQACAAMAAAAQ888888888888888888888888208888888888882dbw88888888887vZibV888888888q
        KLXGa88888/7Ed0+E7yG8884eWWxj75qQvg888w47uA1obGOBE888xuJolyqGEVwe8888P29RBkzEt+8
        8888bL+5juOc88888888cMMPc8888888888888888888888888888888888888888888888888888//E
        ACIRAQACAgEEAgMAAAAAAAAAAAEAESExQRAgMGFRcUBQsf/aAAgBAwEBPxD8gC7iK0K8qeo3CAHEqglC
        deMLaIACEIygrrxVV8Zi1CHQBHHdnQohcpg2xpURl9BxLWG/o7aSe0LnDIrsmeCA3lHcVwhKuwccYNw4
        qEbuovu/qfBmMcQy1DuN9eLTQOx3FuLWcMsFRTuUS5FC3EwjMOocEFxuM2x7EVkPbITYz8wjGt4mmiZO
        zoqJfl/J7e/0iGcM9WDfEJpjmpmFxPFoGcl0t/8Atn//xAAhEQEAAgICAgMBAQAAAAAAAAABABEhMRBB
        IDBRYXFAUP/aAAgBAgEBPxD+haqobav2ni2xKVlucuRv1rRbER+BAJD1XQdwSuCTKe/LC7YqHyhDlZGE
        VBElH7eKltEoOuR2Ipnhhp4Lx1eHbEuuEZeBmyOogLTuGfuIOwhjMi/zwNAY1DEAZXiiYMTJ7kr8DHCH
        gczghhoPACjKEkcp4+OFD9PBPjUotu4cwR9cCteVvsisDhJyhqalO6GBXp0iJ4dP/rP/xAAqEAEAAgED
        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
</value>
  </data>
</root>